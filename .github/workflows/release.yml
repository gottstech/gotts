name: Release

on:
  push:
    tags:
    - 'v*'

env:
  RUST_BACKTRACE: '1'
  RUSTFLAGS: '-C debug-assertions'

jobs:

  ubuntu-build:
    name: Ubuntu Build Release
    runs-on: ubuntu-latest
    env:
      PLATFORM: linux-amd64
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install dependencies
      run:  sudo apt-get update -yqq && sudo apt-get install -yqq --no-install-recommends libncursesw5-dev
    - name: Tests
      run: cargo test --release --all
    - name: Build
      run: cargo build --release
    - name: Set release version
      run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
    - name: Create archive
      run: tar -czvf gotts-$RELEASE_VERSION-$PLATFORM.tar.gz target/release/gotts
    - name: Debug
      run: ls -a -l
    - name: Upload artifact 
      uses: actions/upload-artifact@v1
      with:
        name: gotts-${{ env.RELEASE_VERSION }}-${{ env.PLATFORM }}
        path: gotts-${{ env.RELEASE_VERSION }}-${{ env.PLATFORM }}.tar.gz

  macos-build:
    name: macOS Build Release
    runs-on: macos-latest
    env:
      PLATFORM: macos
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
    - name: Tests
      run: export CPATH=`xcrun --show-sdk-path`/usr/include && cargo test --release --all
    - name: Build
      run: export CPATH=`xcrun --show-sdk-path`/usr/include && cargo build --release
    - name: Set release version
      run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
    - name: Create archive
      run: tar -czvf gotts-$RELEASE_VERSION-$PLATFORM.tar.gz target/release/gotts
    - name: Upload artifact 
      uses: actions/upload-artifact@v1
      with:
        name: gotts-${{ env.RELEASE_VERSION }}-${{ env.PLATFORM }}
        path: gotts-${{ env.RELEASE_VERSION }}-${{ env.PLATFORM }}.tar.gz

  windows-build:
    name: Windows Build Release
    runs-on: windows-latest
    env:
      PLATFORM: win-x64
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Patch Gotts ncurses
      run: git apply .github/workflows/win.patch
    - name: Install LLVM
      run:  choco install -y llvm
    - name: Tests
      run: cargo test --release --all
    - name: Build
      run: cargo build --release
    - name: Set release version
      run: |
        echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
      shell: bash
    - name: Create archive
      run: |
        /c/Program\ Files/7-Zip/7z.exe a gotts-$RELEASE_VERSION-$PLATFORM.zip target/release/gotts.exe
      shell: bash
    - name: Upload artifact 
      uses: actions/upload-artifact@v1
      with:
        name: gotts-${{ env.RELEASE_VERSION }}-${{ env.PLATFORM }}
        path: gotts-${{ env.RELEASE_VERSION }}-${{ env.PLATFORM }}.zip

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ubuntu-build, macos-build, windows-build]
    env:
      PLATFORM: linux-amd64
    steps:
    - name: Set release version
      run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
    - name: Download Ubuntu artificact
      uses: actions/download-artifact@v1
      with:
        name: gotts-${{ env.RELEASE_VERSION }}-linux-amd64
    - name: Download macOS artificact
      uses: actions/download-artifact@v1
      with:
        name: gotts-${{ env.RELEASE_VERSION }}-macos
    - name: Download Windows artificact
      uses: actions/download-artifact@v1
      with:
        name: gotts-${{ env.RELEASE_VERSION }}-win-x64
    - name: Create checksums
      run: |
        openssl sha256 gotts-$RELEASE_VERSION-linux-amd64/gotts-$RELEASE_VERSION-linux-amd64.tar.gz > gotts-$RELEASE_VERSION-linux-amd64-sha256sum.txt
        openssl sha256 gotts-$RELEASE_VERSION-macos/gotts-$RELEASE_VERSION-macos.tar.gz > gotts-$RELEASE_VERSION-macos-sha256sum.txt
        openssl sha256 gotts-$RELEASE_VERSION-win-x64/gotts-$RELEASE_VERSION-win-x64.zip > gotts-$RELEASE_VERSION-win-x64-sha256sum.txt
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          gotts-$RELEASE_VERSION-linux-amd64/gotts-${{ env.RELEASE_VERSION }}-linux-amd64.tar.gz
          gotts-${{ env.RELEASE_VERSION }}-linux-amd64-sha256sum.txt
          gotts-${{ env.RELEASE_VERSION }}-macos/gotts-${{ env.RELEASE_VERSION }}-macos.tar.gz
          gotts-${{ env.RELEASE_VERSION }}-macos-sha256sum.txt
          gotts-${{ env.RELEASE_VERSION }}-win-x64/gotts-${{ env.RELEASE_VERSION }}-win-x64.zip
          gotts-${{ env.RELEASE_VERSION }}-win-x64-sha256sum.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
